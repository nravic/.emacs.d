;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history read-expression-history shell-command-history swiper-history minibuffer-history ivy-history counsel-M-x-history file-name-history))
(setq query-replace-history '("example_kalman" "exampleKalman" "identity" "zeros" "," ";" "" "na::" "na:Matrix3<f64>" "Matrix3<f64>" "Matrix3<f64>" "T" "self" "state"))
(setq swiper-history '(#("linear" 0 6 (ivy-index 1)) #("struct" 0 6 (ivy-index 0)) #("fn" 0 2 (ivy-index 1)) #("float" 0 5 (ivy-index 0))))
(setq ivy-history '(#("main.rs" 0 7 (ivy-index 0)) #("lib" 0 3 (ivy-index 0))))
(setq counsel-M-x-history '(#("lisp-mo" 0 7 (ivy-index 2)) #("replace" 0 7 (ivy-index 0)) #("customize-the" 0 13 (ivy-index 0)) #("pyve" 0 4 (ivy-index 0)) #("rustic-m" 0 8 (ivy-index 0)) #("rustic-" 0 7 (ivy-index 0)) #("rust" 0 4 (ivy-index 3)) #("cu" 0 2 (ivy-index 0)) #("text" 0 4 (ivy-index 0))))
(setq file-name-history '(#("/home/nravic/.emacs~" 0 20 (ivy-index 7)) #("/home/nravic/.emacs.d/" 0 22 (ivy-index 0)) #("/home/nravic/.emacs-backup-file" 0 31 (ivy-index 0)) #("/home/nravic/code/rusty-kalman/Cargo.toml" 0 41 (ivy-index 0)) #("/home/nravic/code/rusty-kalman/src/main.rs" 0 42 (ivy-index 0)) #("/home/nravic/documents/misc/" 0 28 (ivy-index 0)) #("/home/nravic/documents/misc/zoe.md" 0 34 (ivy-index 0)) #("/home/nravic/documents/misc/zoe.txt" 0 35 (ivy-index 0)) #("/home/nravic/code/rusty-kalman/src/lib.rs" 0 41 (ivy-index 0)) #("/home/nravic/.config/i3/config" 0 30 (ivy-index 0)) #("/home/nravic/tmp/raina-inst.txt" 0 31 (ivy-index 0)) #("/home/nravic/tmp/raina-inst.md" 0 30 (ivy-index 0)) #("/home/nravic/tmp/" 0 17 (ivy-index 0))))
(setq counsel-compile-history 'nil)
(setq kill-ring '("#[derive(Debug)]" "one" "zeros()" "zeros()" "ones" "zeros()" "self)" "i " "dt = " "Linear" "exampleSTate " "kalmanState = " "Kalman" "kalmanState = " "kalman_state =" "zeros()" "println!(\"Hello, world!\");" "Initial estimates
        // project " "#[derive(Default)]
" "#[derive(Default)]" "zeros" "LInear" "not truly generic, only accepts ndarray types" "self.Q = " "Natru" "na::" "reversed_axes" "reversed_axes" "reversed_axes()" "reversed_axes()" "T, P> " "na:" "Kenjiro Tsuda" "extern crate ndarray;
use ndarray::Array3;" "Array3, Array3" "array3, A" "Grandma" "ndarray::" "ndarray:" "ndarray::prelude::*;
" "init_s" "P" "Vec" "T, init" "x" "kalmanPredict();
    kalmanUpdate(); " "Neutrogena gentle daily cleanser " "whene" "queries google firebase for the different categories" "the google fire" "Google Firebase " "collected" "user inf" "he " "platofrm a" "because " "is also calle" "oculd be " "compl" "http://watchserieshd.tv/series/his-dark-materials-season-1"))
(setq search-ring 'nil)
(setq regexp-search-ring '("linear" "struct" "fn" "float"))
